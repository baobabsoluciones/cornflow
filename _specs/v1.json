{
  "definitions": {
    "Config": {
      "properties": {
        "gapAbs": {
          "type": "number"
        }, 
        "gapRel": {
          "type": "number"
        }, 
        "keepFiles": {
          "type": "boolean"
        }, 
        "logPath": {
          "type": "string"
        }, 
        "maxMemory": {
          "type": "integer"
        }, 
        "maxNodes": {
          "type": "integer"
        }, 
        "mip": {
          "type": "boolean"
        }, 
        "msg": {
          "type": "boolean"
        }, 
        "options": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "solver": {
          "type": "string"
        }, 
        "threads": {
          "type": "integer"
        }, 
        "timeLimit": {
          "type": "integer"
        }, 
        "warmStart": {
          "type": "boolean"
        }
      }, 
      "type": "object"
    }, 
    "ExecutionDagPostRequest": {
      "properties": {
        "config": {
          "$ref": "#/definitions/Config"
        }, 
        "dag_name": {
          "type": "string"
        }, 
        "data": {}, 
        "description": {
          "type": "string"
        }, 
        "instance_id": {
          "type": "string"
        }, 
        "log_json": {
          "$ref": "#/definitions/Log"
        }, 
        "log_text": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }, 
        "solution_schema": {
          "type": "string", 
          "x-nullable": true
        }, 
        "state": {
          "type": "integer"
        }
      }, 
      "required": [
        "config", 
        "instance_id", 
        "name"
      ], 
      "type": "object"
    }, 
    "ExecutionDagRequest": {
      "properties": {
        "data": {}, 
        "log_json": {
          "$ref": "#/definitions/Log"
        }, 
        "log_text": {
          "type": "string"
        }, 
        "solution_schema": {
          "type": "string", 
          "x-nullable": true
        }, 
        "state": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "ExecutionDataEndpointResponse": {
      "properties": {
        "data": {}, 
        "id": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ExecutionDetailsEndpointResponse": {
      "properties": {
        "config": {
          "$ref": "#/definitions/Config"
        }, 
        "created_at": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "id": {
          "type": "string"
        }, 
        "instance_id": {
          "type": "string"
        }, 
        "message": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }, 
        "state": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "ExecutionEditRequest": {
      "properties": {
        "description": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ExecutionLogEndpointResponse": {
      "properties": {
        "id": {
          "type": "string"
        }, 
        "log": {
          "$ref": "#/definitions/Log"
        }, 
        "name": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ExecutionRequest": {
      "properties": {
        "config": {
          "$ref": "#/definitions/Config"
        }, 
        "dag_name": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "instance_id": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }
      }, 
      "required": [
        "config", 
        "instance_id", 
        "name"
      ], 
      "type": "object"
    }, 
    "ExecutionStatusEndpointResponse": {
      "properties": {
        "id": {
          "type": "string"
        }, 
        "message": {
          "type": "string"
        }, 
        "state": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "FirstSolution": {
      "properties": {
        "BestInteger": {
          "type": "number", 
          "x-nullable": true
        }, 
        "CutsBestBound": {
          "type": "number", 
          "x-nullable": true
        }, 
        "Node": {
          "type": "integer", 
          "x-nullable": true
        }, 
        "NodesLeft": {
          "type": "integer", 
          "x-nullable": true
        }
      }, 
      "required": [
        "BestInteger", 
        "CutsBestBound", 
        "Node", 
        "NodesLeft"
      ], 
      "type": "object"
    }, 
    "InstanceDataEndpointResponse": {
      "properties": {
        "data": {}, 
        "id": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }
      }, 
      "required": [
        "data"
      ], 
      "type": "object"
    }, 
    "InstanceDetailsEndpointResponse": {
      "properties": {
        "created_at": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "executions": {
          "items": {
            "$ref": "#/definitions/ExecutionDetailsEndpointResponse"
          }, 
          "type": "array"
        }, 
        "id": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }, 
        "user_id": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "InstanceEditRequest": {
      "properties": {
        "description": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "InstanceEndpointResponse": {
      "properties": {
        "created_at": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "id": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }, 
        "user_id": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "InstanceRequest": {
      "properties": {
        "data": {}, 
        "data_schema": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }
      }, 
      "required": [
        "data", 
        "name"
      ], 
      "type": "object"
    }, 
    "Log": {
      "properties": {
        "best_bound": {
          "type": "number", 
          "x-nullable": true
        }, 
        "best_solution": {
          "type": "number", 
          "x-nullable": true
        }, 
        "cut_info": {
          "x-nullable": true
        }, 
        "first_relaxed": {
          "type": "number", 
          "x-nullable": true
        }, 
        "first_solution": {
          "allOf": [
            {
              "$ref": "#/definitions/FirstSolution"
            }
          ], 
          "x-nullable": true
        }, 
        "gap": {
          "type": "number", 
          "x-nullable": true
        }, 
        "matrix": {
          "allOf": [
            {
              "$ref": "#/definitions/Matrix"
            }
          ], 
          "x-nullable": true
        }, 
        "matrix_post": {
          "allOf": [
            {
              "$ref": "#/definitions/Matrix"
            }
          ], 
          "x-nullable": true
        }, 
        "nodes": {
          "type": "integer", 
          "x-nullable": true
        }, 
        "presolve": {
          "allOf": [
            {
              "$ref": "#/definitions/Presolve"
            }
          ], 
          "x-nullable": true
        }, 
        "progress": {
          "$ref": "#/definitions/Progress"
        }, 
        "rootTime": {
          "type": "number", 
          "x-nullable": true
        }, 
        "sol_code": {
          "type": "integer", 
          "x-nullable": true
        }, 
        "solver": {
          "type": "string", 
          "x-nullable": true
        }, 
        "status": {
          "type": "string", 
          "x-nullable": true
        }, 
        "status_code": {
          "type": "integer", 
          "x-nullable": true
        }, 
        "time": {
          "type": "number", 
          "x-nullable": true
        }, 
        "version": {
          "type": "string", 
          "x-nullable": true
        }
      }, 
      "type": "object"
    }, 
    "LoginEndpointRequest": {
      "properties": {
        "email": {
          "type": "string"
        }, 
        "password": {
          "type": "string"
        }
      }, 
      "required": [
        "email", 
        "password"
      ], 
      "type": "object"
    }, 
    "Matrix": {
      "properties": {
        "constraints": {
          "type": "integer"
        }, 
        "nonzeros": {
          "type": "integer"
        }, 
        "variables": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "Presolve": {
      "properties": {
        "cols": {
          "type": "integer"
        }, 
        "rows": {
          "type": "integer"
        }, 
        "time": {
          "type": "number"
        }
      }, 
      "required": [
        "cols", 
        "rows", 
        "time"
      ], 
      "type": "object"
    }, 
    "Progress": {
      "properties": {
        "BestInteger": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "CutsBestBound": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "Gap": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "IInf": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "ItpNode": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "Node": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "NodesLeft": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "Objective": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "Time": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "UserDetailsEndpointResponse": {
      "properties": {
        "admin": {
          "type": "boolean"
        }, 
        "email": {
          "type": "string"
        }, 
        "id": {
          "type": "integer"
        }, 
        "name": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "UserEditRequest": {
      "properties": {
        "email": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "UserEndpointResponse": {
      "properties": {
        "admin": {
          "type": "boolean"
        }, 
        "created_at": {
          "type": "string"
        }, 
        "email": {
          "type": "string"
        }, 
        "id": {
          "type": "integer"
        }, 
        "name": {
          "type": "string"
        }, 
        "super_admin": {
          "type": "boolean"
        }
      }, 
      "type": "object"
    }, 
    "UserSignupRequest": {
      "properties": {
        "email": {
          "format": "email", 
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }, 
        "password": {
          "type": "string"
        }
      }, 
      "required": [
        "email", 
        "name", 
        "password"
      ], 
      "type": "object"
    }
  }, 
  "info": {
    "title": "Cornflow API docs", 
    "version": "v1"
  }, 
  "paths": {
    "/dag/": {
      "post": {
        "description": "Create an execution manually.", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/ExecutionDagPostRequest"
            }
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/ExecutionDetailsEndpointResponse"
            }
          }
        }, 
        "tags": [
          "DAGs"
        ]
      }
    }, 
    "/dag/{idx}/": {
      "get": {
        "description": "Get input data and configuration for an execution", 
        "parameters": [
          {
            "in": "path", 
            "name": "idx", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "DAGs"
        ]
      }, 
      "put": {
        "description": "Edit an execution", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/ExecutionDagRequest"
            }
          }, 
          {
            "in": "path", 
            "name": "idx", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "DAGs"
        ]
      }
    }, 
    "/execution/": {
      "get": {
        "description": "Get all executions", 
        "parameters": [], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ExecutionDetailsEndpointResponse"
              }, 
              "type": "array"
            }
          }
        }, 
        "tags": [
          "Executions"
        ]
      }, 
      "post": {
        "description": "Create an execution", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/ExecutionRequest"
            }
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/ExecutionDetailsEndpointResponse"
            }
          }
        }, 
        "tags": [
          "Executions"
        ]
      }
    }, 
    "/execution/{idx}/": {
      "delete": {
        "description": "Delete an execution", 
        "parameters": [
          {
            "in": "path", 
            "name": "idx", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "Executions"
        ]
      }, 
      "get": {
        "description": "Get details of an execution", 
        "parameters": [
          {
            "in": "path", 
            "name": "idx", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/ExecutionDetailsEndpointResponse"
            }
          }
        }, 
        "tags": [
          "Executions"
        ]
      }, 
      "put": {
        "description": "Edit an execution", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/ExecutionEditRequest"
            }
          }, 
          {
            "in": "path", 
            "name": "idx", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "Executions"
        ]
      }
    }, 
    "/execution/{idx}/data/": {
      "get": {
        "description": "Get solution data of an execution", 
        "parameters": [
          {
            "in": "path", 
            "name": "idx", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/ExecutionDataEndpointResponse"
            }
          }
        }, 
        "tags": [
          "Executions"
        ]
      }
    }, 
    "/execution/{idx}/log/": {
      "get": {
        "description": "Get log of an execution", 
        "parameters": [
          {
            "in": "path", 
            "name": "idx", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/ExecutionLogEndpointResponse"
            }
          }
        }, 
        "tags": [
          "Executions"
        ]
      }
    }, 
    "/execution/{idx}/status/": {
      "get": {
        "description": "Get status of an execution", 
        "parameters": [
          {
            "in": "path", 
            "name": "idx", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/ExecutionStatusEndpointResponse"
            }
          }
        }, 
        "tags": [
          "Executions"
        ]
      }
    }, 
    "/instance/": {
      "get": {
        "description": "Get all instances", 
        "parameters": [], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "items": {
                "$ref": "#/definitions/InstanceEndpointResponse"
              }, 
              "type": "array"
            }
          }
        }, 
        "tags": [
          "Instances"
        ]
      }, 
      "post": {
        "description": "Create an instance", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/InstanceRequest"
            }
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/InstanceDetailsEndpointResponse"
            }
          }
        }, 
        "tags": [
          "Instances"
        ]
      }
    }, 
    "/instance/{idx}/": {
      "delete": {
        "description": "Delete an instance", 
        "parameters": [
          {
            "in": "path", 
            "name": "idx", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "Instances"
        ]
      }, 
      "get": {
        "description": "Get one instance", 
        "parameters": [
          {
            "in": "path", 
            "name": "idx", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/InstanceDetailsEndpointResponse"
            }
          }
        }, 
        "tags": [
          "Instances"
        ]
      }, 
      "put": {
        "description": "Edit an instance", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/InstanceEditRequest"
            }
          }, 
          {
            "in": "path", 
            "name": "idx", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "Instances"
        ]
      }
    }, 
    "/instance/{idx}/data/": {
      "get": {
        "description": "Get input data of an instance", 
        "parameters": [
          {
            "in": "path", 
            "name": "idx", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/InstanceDataEndpointResponse"
            }
          }
        }, 
        "tags": [
          "Instances"
        ]
      }
    }, 
    "/instancefile/": {
      "post": {
        "description": "Create an instance from an mps file", 
        "parameters": [
          {
            "in": "formData", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "in": "formData", 
            "name": "description", 
            "required": false, 
            "type": "string"
          }, 
          {
            "in": "formData", 
            "name": "minimize", 
            "required": false, 
            "type": "boolean"
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/InstanceDetailsEndpointResponse"
            }
          }
        }, 
        "tags": [
          "Instances"
        ]
      }
    }, 
    "/login/": {
      "post": {
        "description": "Log in", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/LoginEndpointRequest"
            }
          }
        ], 
        "responses": {}, 
        "tags": [
          "Users"
        ]
      }
    }, 
    "/schema/{dag_name}/": {
      "get": {
        "description": "Get one schema", 
        "parameters": [
          {
            "in": "path", 
            "name": "dag_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "Schemas"
        ]
      }
    }, 
    "/signup/": {
      "post": {
        "description": "Sign up", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/UserSignupRequest"
            }
          }
        ], 
        "responses": {}, 
        "tags": [
          "Users"
        ]
      }
    }, 
    "/user/": {
      "get": {
        "description": "Get all users", 
        "parameters": [], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "items": {
                "$ref": "#/definitions/UserEndpointResponse"
              }, 
              "type": "array"
            }
          }
        }, 
        "tags": [
          "Users"
        ]
      }
    }, 
    "/user/{user_id}/": {
      "delete": {
        "description": "Delete a user", 
        "parameters": [
          {
            "format": "int32", 
            "in": "path", 
            "name": "user_id", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "responses": {}, 
        "tags": [
          "Users"
        ]
      }, 
      "get": {
        "description": "Get a user", 
        "parameters": [
          {
            "format": "int32", 
            "in": "path", 
            "name": "user_id", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/UserDetailsEndpointResponse"
            }
          }
        }, 
        "tags": [
          "Users"
        ]
      }, 
      "put": {
        "description": "Edit a user", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/UserEditRequest"
            }
          }, 
          {
            "format": "int32", 
            "in": "path", 
            "name": "user_id", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/UserDetailsEndpointResponse"
            }
          }
        }, 
        "tags": [
          "Users"
        ]
      }
    }, 
    "/user/{user_id}/{make_admin}/": {
      "put": {
        "description": "Toggle user into admin", 
        "parameters": [
          {
            "format": "int32", 
            "in": "path", 
            "name": "make_admin", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "format": "int32", 
            "in": "path", 
            "name": "user_id", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "responses": {
          "default": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/UserEndpointResponse"
            }
          }
        }, 
        "tags": [
          "Users"
        ]
      }
    }
  }, 
  "swagger": "2.0.0"
}
