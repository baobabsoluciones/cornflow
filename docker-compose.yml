version: '3'

services:
  cornflow:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5000:5000
    environment:
      - CORNFLOW_ADMIN_EMAIL=cornflow_admin@cornflow.com
      - CORNFLOW_ADMIN_PWD=Cornflowadmin_1234
      - CORNFLOW_SERVICE_USER=service_user@cornflow.com
      - CORNFLOW_SERVICE_PWD=Serviceuser_1234
      - CORNFLOW_DB_HOST=cornflow_db
      - CORNFLOW_DB_PORT=5432
      - CORNFLOW_DB_USER=cornflow
      - CORNFLOW_DB_PASSWORD=cornflow
      - CORNFLOW_DB=cornflow
    depends_on:
      - cornflow_db
      - webserver

  cornflow_db:
    image: postgres
    environment:
      - POSTGRES_USER=cornflow
      - POSTGRES_PASSWORD=cornflow
      - POSTGRES_DB=cornflow
    volumes:
      - postgres_cf_data:/var/lib/postgresql/data/

  webserver:
    build:
      context: ./airflow_config
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./airflow_config/dags:/usr/local/airflow/dags
      - ./airflow_config/requirements.txt:/requirements.txt
    environment:
      - AIRFLOW_USER=admin
      - AIRFLOW_PWD=admin
      - CORNFLOW_SERVICE_USER=service_user@cornflow.com
      - CORNFLOW_SERVICE_PWD=Serviceuser_1234
      - AIRFLOW_DB_HOST=airflow_db
      - AIRFLOW_DB_PORT=5432
      - AIRFLOW_DB_USER=airflow
      - AIRFLOW_DB_PASSWORD=airflow
      - AIRFLOW_DB=airflow
    ports:
      - 8080:8080
    depends_on:
      - airflow_db
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow_db:
    image: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres_af_data:/var/lib/postgresql/data/

volumes:
  postgres_cf_data:
  postgres_af_data:

