{{- if .Values.postgresql.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cornflow.fullname" . }}-postgresql
  labels:
    {{- include "cornflow.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "cornflow.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgresql
  template:
    metadata:
      labels:
        {{- include "cornflow.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgresql
    spec:
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.password }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.auth.username }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.auth.username }}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: data
          {{- if .Values.postgresql.primary.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "cornflow.fullname" . }}-postgresql
          {{- else }}
          emptyDir: {}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "cornflow.fullname" . }}-postgresql
  labels:
    {{- include "cornflow.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  type: {{ .Values.postgresql.service.type }}
  ports:
    - port: {{ .Values.postgresql.service.port }}
      targetPort: postgresql
      protocol: TCP
      name: postgresql
  selector:
    {{- include "cornflow.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
{{- if .Values.postgresql.primary.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "cornflow.fullname" . }}-postgresql
  labels:
    {{- include "cornflow.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.postgresql.primary.persistence.storageClass }}
  storageClassName: {{ .Values.postgresql.primary.persistence.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.postgresql.primary.persistence.size }}
{{- end }}
{{- end }} 