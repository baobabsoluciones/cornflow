{{/*
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
*/}}

################################
## Cornflow Deployment
#################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-cornflow-server
  labels:
    {{- include "cornflow.labels" . | nindent 4 }}
    app.kubernetes.io/component: cornflow-server
spec:
  {{- if not .Values.cornflow.autoscaling.enabled }}
  replicas: {{ .Values.cornflow.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cornflow.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: cornflow-server
  template:
    metadata:
      labels:
        {{- include "cornflow.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: cornflow-server
      {{- with .Values.cornflow.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cornflow.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security | nindent 8 }}

      containers:
        - name: cornflow-server
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: {{ .Values.security.runAsUser }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.cornflow.resources | nindent 12 }}
          env:
            - name: CORNFLOW_DB_HOST
              value: {{ .Release.Name }}-cornflow-postgresql
            - name: AIRFLOW_URL
              value: "http://{{ .Release.Name }}-webserver:8080"
            {{- range $key, $value := .Values.cornflow.env }}
            - name: {{ $key }}
              value: {{ $value | replace "RELEASE_NAME" $.Release.Name | quote }}
            {{- end }}

          volumeMounts:
            - name: logs
              mountPath: /usr/src/app/log
            - name: ssh-keys
              mountPath: /usr/src/app/.ssh
              readOnly: true
            - name: app-dir
              mountPath: /usr/src/app
      {{- with .Values.cornflow.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cornflow.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cornflow.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: logs
          emptyDir: {}
        - name: ssh-keys
          secret:
            secretName: {{ .Release.Name }}-ssh-keys
            optional: true
        - name: app-dir
          emptyDir: {} 